name: Build on Linux (GCC)

on:
  push:
    branches: [ "master", "feature/CAS-144_windows_macos_installer" ]
  pull_request:
    branches: [ "master", "feature/CAS-144_windows_macos_installer" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ macos-latest ]
        build_type: [ Release ]
        c_compiler: [ clang ]
        include:
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: sudo apt-get install -y cmake

      - name: Install Qt
        uses: jurplel/install-qt-action@v4.0.0
        with:
          version: '6.7.0'
          host: 'macOS'
          install-deps: 'true'
          dir: '${{ github.workspace }}/qt/'
          modules: 'qtwebengine'
          cache: 'true'

      - name: Install Conan
        uses: turtlebrowser/get-conan@v1.2

      - name: Detect Conan profiles
        run: conan profile detect

      - name: Restore Conan cache
        uses: actions/cache@v3
        with:
          key: 'conan_cache'
          path: ~/.conan2/p

      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Install conan dependencies
        run: conan install ${{ github.workspace }}/conan --build=missing

      - name: Build
        run: conan build ${{ github.workspace }}/conan

      - name: Test
        run: ${{ github.workspace }}/conan/build/application_build/CapyArtStudio_Tests

      - name: Create installer
        run: python3 ${{ github.workspace }}/tools/create_installer_osx.py

      - name: Upload installer
        uses: actions/upload-artifact@v3
        with:
          name: CapyArtStudio.darwin.1.0.arm64.dmg
          path: ${{ github.workspace }}/CapyArtStudio.darwin.1.0.arm64.dmg